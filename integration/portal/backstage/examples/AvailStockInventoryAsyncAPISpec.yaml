asyncapi: 2.6.0
info:
  title: Material Sub-Lot Event
  version: 1.0.0
  description: |
    The data set is generated by ERP to APP. This is the Available Stock Inventory information on the floor.

servers:
  production:
    url: sbus-{env}-aes.servicebus.windows.net:{port}
    protocol: amqp1
    description: Azure Service Bus
    variables:
      env:
        description: Indicates variuos environments
        enum:
          - dev
          - tst
          - uat
          - prod
      port:
        description: Secure connection (TLS) is available through port 5671.
        default: "5671"
        enum:
          - "5671"
          - "5672"
    security:
      - oauth2: []

defaultContentType: application/json

channels:
  /{unit}/availableStockInventory/:
    parameters:
      unit:
        $ref: "#/components/parameters/unit"
    publish:
      message:
        $ref: "#/components/messages/materialSubLotEventMessage"

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://authorization-server.com/auth
          tokenUrl: https://authorization-server.com/token
          scopes:
            read: Read access
            write: Write access

  parameters:
    unit:
      description: The fully qualified, unique ID of the production unit.
      schema:
        type: string

  messages:
    materialSubLotEventMessage:
      name: MaterialSubLot
      title: Materail Sub Lot
      summary: Available Stock inventory information shared with APP by ERP
      traits:
        - $ref: "#/components/messageTraits/commonHeaders"
      payload:
        $ref: "#/components/schemas/materialSubLotMessage"

  schemas:
    materialSubLotMessage:
      type: object
      properties:
        data:
          type: object
          properties:
            query:
              $ref: "#/components/schemas/query"
            materialLot:
              $ref: "#/components/schemas/materialSubLot"

    query:
      type: object
      properties:
        status:
          type: string
          example: "Accepted"
        description:
          type: string
          example: "Available Paint Inventory"
        expression:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              value:
                type: object
                properties:
                  valueString:
                    type: string
                    example: "AR"

    materialSubLot:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "D53359"
          quantity:
            type: string
            example: "10.640"
          quantityUnitOfMeasure:
            type: string
            example: "t"
          status:
            type: string
            example: "Available"
          hierarchyScope:
            $ref: "#/components/schemas/hierarchyScope"
          storageLocation:
            $ref: "#/components/schemas/storageLocation"
          materialLotProperty:
            $ref: "#/components/schemas/materialLotProperty"
          comment:
            $ref: "#/components/schemas/comment"

    hierarchyScope:
      type: object
      required:
        - equipmentID
      properties:
        equipmentID:
          type: string
          description: The unique identifier of the manufactuing unit aka production line.
          example: APL1
        equipmentLevel:
          type: string
          description: Indicates significance of the manufacturing unit.
          enum:
            - "ProductionLine"
            - "StorageZone"

    storageLocation:
      type: object
      properties:
        location:
          type: string
          example: "AA21C"
        locationType:
          type: string
          example: "Operational Location"

    comment:
      type: array
      items:
        type: object
        properties:
          entryID:
            type: string
            example: "AvailableStockComment-000"
          commentText:
            type: string
            example: "See Stock Comments from Works"
          personID:
            type: string
            example: "APP"

    materialLotProperty:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          value:
            type: object
            properties:
              valueString:
                type: string
          unitOfMeasure:
            type: string
            example: "mm"
          description:
            type: string
            example: "ReceiptDate"

  messageTraits:
    commonHeaders:
      headers:
        type: object
        required:
          - id
          - source
          - specversion
          - type
        properties:
          id:
            type: string
            description: Uniquely identifies the event. Producers must ensure source + id is unique for each discrete event.
            example: "4232b719-c25a-4d30-9e4f-36fcc32bcfa8"
          source:
            type: string
            description: Identifies the context in which an event happened. Often this will include information such as the type of the event source, the organization publishing the event or the process that produced the event.
            example: "WPCSC"
          specversion:
            type: string
            description: Version of the CloudEvents specification being used by the event. Version number includes major and minor version details only.
            example: "1.0"
          type:
            type: string
            description: The primary means by which consumers identify the type of event they receive. The type is often used for filtering events on a topic subscription, routing, observability, policy enforcement, etc.
            example: "OperationsResponse"
          dataschema:
            type: string
            description: Identifies the schema data adheres to. If breaking changes are made to the schema then the URI should be changed (e.g. by introducing a version number).
            example: "http://dataschema"
          subject:
            type: string
            description: The subject of the event in the context of the event producer (identified by source). A subscriber will typically subscribe to events emitted by a source, but this might not be sufficient to filter the specific events of interest.
            example: "LoadCoilEvent"
          time:
            type: string
            description: Timestamp when the occurrence happened. If this cannot be determined then some other time (e.g. current time) can be used by this  source provided all producers use a consistent approach.
            example: "2023-08-03T21:59:59.000+10:00"
          infoclass:
            type: string
            example: "Internal"
            enum:
              - Internal
              - Public
              - Confidential
              - Restricted

  operationTraits:
    amqp:
      bindings:
        amqp:
          is: topic
